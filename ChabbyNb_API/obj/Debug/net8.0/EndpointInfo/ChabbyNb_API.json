{
  "openapi": "3.0.1",
  "info": {
    "title": "ChabbyNb API",
    "description": "Apartment rental API for ChabbyNb",
    "version": "v1"
  },
  "paths": {
    "/api/Account/Login": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/RefreshToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Account/Register": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Profile": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/ChangePassword": {
      "put": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/ForgotPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/VerifyEmail": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "token",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/ResendVerification": {
      "post": {
        "tags": [
          "Account"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Roles": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Users/{userId}/Roles": {
      "get": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Users/{userId}/Roles/{role}": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Users/{userId}/Permissions": {
      "post": {
        "tags": [
          "Account"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPermissionsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPermissionsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetPermissionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Account/Roles/All": {
      "get": {
        "tags": [
          "Account"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Dashboard": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Apartments": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Bookings": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Amenities": {
      "get": {
        "tags": [
          "Admin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "IconFile",
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "IconFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Category": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Name": {
                  "style": "form"
                },
                "IconFile": {
                  "style": "form"
                },
                "Category": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Admin/Amenities/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Name"
                ],
                "type": "object",
                "properties": {
                  "AmenityID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 100,
                    "minLength": 0,
                    "type": "string"
                  },
                  "IconFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Category": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "AmenityID": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "IconFile": {
                  "style": "form"
                },
                "Category": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/SendMessage/{userId}": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminMessageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminMessageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AdminMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Bookings/Upcoming": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Bookings/Past": {
      "get": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Admin/Bookings/{id}/Cancel": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCancellationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCancellationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCancellationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Amenities": {
      "get": {
        "tags": [
          "Amenities"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Amenities/{id}": {
      "get": {
        "tags": [
          "Amenities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AmenityDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Amenities/Categories": {
      "get": {
        "tags": [
          "Amenities"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Amenities/Category/{category}": {
      "get": {
        "tags": [
          "Amenities"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Amenities/Popular": {
      "get": {
        "tags": [
          "Amenities"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Amenities/Search": {
      "get": {
        "tags": [
          "Amenities"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Amenities/ForApartment/{id}": {
      "get": {
        "tags": [
          "Amenities"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AmenityDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Apartments": {
      "get": {
        "tags": [
          "Apartments"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Apartments"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Address": {
                    "type": "string"
                  },
                  "Neighborhood": {
                    "type": "string"
                  },
                  "PricePerNight": {
                    "type": "number",
                    "format": "double"
                  },
                  "Bedrooms": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Bathrooms": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "MaxOccupancy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SquareMeters": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "PetFriendly": {
                    "type": "boolean"
                  },
                  "PetFee": {
                    "type": "number",
                    "format": "double"
                  },
                  "Latitude": {
                    "type": "number",
                    "format": "double"
                  },
                  "Longitude": {
                    "type": "number",
                    "format": "double"
                  },
                  "PrimaryImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "PrimaryImageCaption": {
                    "type": "string"
                  },
                  "AdditionalImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "AdditionalImageCaptions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "AmenityIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "encoding": {
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                },
                "Neighborhood": {
                  "style": "form"
                },
                "PricePerNight": {
                  "style": "form"
                },
                "Bedrooms": {
                  "style": "form"
                },
                "Bathrooms": {
                  "style": "form"
                },
                "MaxOccupancy": {
                  "style": "form"
                },
                "SquareMeters": {
                  "style": "form"
                },
                "PetFriendly": {
                  "style": "form"
                },
                "PetFee": {
                  "style": "form"
                },
                "Latitude": {
                  "style": "form"
                },
                "Longitude": {
                  "style": "form"
                },
                "PrimaryImage": {
                  "style": "form"
                },
                "PrimaryImageCaption": {
                  "style": "form"
                },
                "AdditionalImages": {
                  "style": "form"
                },
                "AdditionalImageCaptions": {
                  "style": "form"
                },
                "AmenityIds": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Apartments/Featured": {
      "get": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Apartments/Map": {
      "get": {
        "tags": [
          "Apartments"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentMapDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentMapDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentMapDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Apartments/{id}": {
      "get": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ApartmentID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Title": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Address": {
                    "type": "string"
                  },
                  "Neighborhood": {
                    "type": "string"
                  },
                  "PricePerNight": {
                    "type": "number",
                    "format": "double"
                  },
                  "Bedrooms": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Bathrooms": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "MaxOccupancy": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "SquareMeters": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "PetFriendly": {
                    "type": "boolean"
                  },
                  "PetFee": {
                    "type": "number",
                    "format": "double"
                  },
                  "Latitude": {
                    "type": "number",
                    "format": "double"
                  },
                  "Longitude": {
                    "type": "number",
                    "format": "double"
                  },
                  "IsActive": {
                    "type": "boolean"
                  },
                  "NewImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "ImageCaption": {
                    "type": "string"
                  },
                  "SetAsPrimary": {
                    "type": "boolean"
                  },
                  "AdditionalImages": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "AdditionalImageCaptions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "AmenityIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "encoding": {
                "ApartmentID": {
                  "style": "form"
                },
                "Title": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Address": {
                  "style": "form"
                },
                "Neighborhood": {
                  "style": "form"
                },
                "PricePerNight": {
                  "style": "form"
                },
                "Bedrooms": {
                  "style": "form"
                },
                "Bathrooms": {
                  "style": "form"
                },
                "MaxOccupancy": {
                  "style": "form"
                },
                "SquareMeters": {
                  "style": "form"
                },
                "PetFriendly": {
                  "style": "form"
                },
                "PetFee": {
                  "style": "form"
                },
                "Latitude": {
                  "style": "form"
                },
                "Longitude": {
                  "style": "form"
                },
                "IsActive": {
                  "style": "form"
                },
                "NewImage": {
                  "style": "form"
                },
                "ImageCaption": {
                  "style": "form"
                },
                "SetAsPrimary": {
                  "style": "form"
                },
                "AdditionalImages": {
                  "style": "form"
                },
                "AdditionalImageCaptions": {
                  "style": "form"
                },
                "AmenityIds": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Apartments/Search": {
      "get": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "minPrice",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "maxPrice",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "bedrooms",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "petFriendly",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Apartments/{apartmentId}/Images": {
      "get": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "apartmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentImageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentImageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApartmentImageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Apartments/{apartmentId}/PrimaryImage": {
      "get": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "apartmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentImageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentImageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApartmentImageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Apartments/{id}/Status": {
      "patch": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApartmentStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApartmentStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApartmentStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Apartments/{apartmentId}/Image/{imageId}": {
      "delete": {
        "tags": [
          "Apartments"
        ],
        "parameters": [
          {
            "name": "apartmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bookings"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookingCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bookings/{id}": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bookings/Upcoming": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Bookings/Past": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Bookings/CalculatePrice": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "apartmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "checkInDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "checkOutDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "guestCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "petCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "promotionCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookingPriceResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingPriceResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingPriceResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/Bookings/{id}/Cancel": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Bookings/{id}/ConfirmPayment": {
      "post": {
        "tags": [
          "Bookings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentConfirmationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentConfirmationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentConfirmationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookingResponseDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chats": {
      "get": {
        "tags": [
          "Chats"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConversationDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Chats"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConversationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chats/{id}": {
      "get": {
        "tags": [
          "Chats"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationWithMessagesDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationWithMessagesDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversationWithMessagesDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chats/{id}/Messages": {
      "post": {
        "tags": [
          "Chats"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Content"
                ],
                "type": "object",
                "properties": {
                  "Content": {
                    "type": "string"
                  },
                  "MediaFile": {
                    "type": "string",
                    "format": "binary"
                  },
                  "TemplateID": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "encoding": {
                "Content": {
                  "style": "form"
                },
                "MediaFile": {
                  "style": "form"
                },
                "TemplateID": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chats/{id}/Archive": {
      "put": {
        "tags": [
          "Chats"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveConversationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveConversationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ArchiveConversationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Chats/Unread": {
      "get": {
        "tags": [
          "Chats"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadCountDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadCountDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnreadCountDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chats/Templates": {
      "get": {
        "tags": [
          "Chats"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplateDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplateDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageTemplateDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Chats"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageTemplateDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chats/Templates/{id}": {
      "put": {
        "tags": [
          "Chats"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTemplateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTemplateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Chats"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ContactMessages": {
      "get": {
        "tags": [
          "ContactMessages"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRead",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactMessageDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactMessageDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContactMessageDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ContactMessages/{id}": {
      "get": {
        "tags": [
          "ContactMessages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ContactMessageDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactMessageDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactMessageDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/ContactMessages/{id}/Status": {
      "put": {
        "tags": [
          "ContactMessages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageStatusDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageStatusDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ContactMessages/{id}/Notes": {
      "put": {
        "tags": [
          "ContactMessages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageNotesDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageNotesDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessageNotesDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/ContactMessages/{id}/Reply": {
      "post": {
        "tags": [
          "ContactMessages"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyMessageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyMessageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReplyMessageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/EmailTemplates": {
      "get": {
        "tags": [
          "EmailTemplates"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplateInfo"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplateInfo"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailTemplateInfo"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "EmailTemplates"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateInfo"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateInfo"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/EmailTemplates/{name}": {
      "get": {
        "tags": [
          "EmailTemplates"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateContent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateContent"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailTemplateContent"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "EmailTemplates"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmailTemplateUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Finance/Dashboard": {
      "get": {
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialOverviewDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialOverviewDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialOverviewDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Finance/Payments": {
      "get": {
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentListItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentListItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentListItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Finance/Payments/{id}": {
      "get": {
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDetailsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDetailsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Finance/Refunds": {
      "post": {
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRefundDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRefundDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessRefundDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RefundDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefundDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefundDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefundDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RefundDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Finance/ManualCharge": {
      "post": {
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualChargeDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ManualChargeDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ManualChargeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentListItemDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentListItemDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentListItemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Home": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/About": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Contact": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Home"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactViewModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactViewModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContactViewModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Privacy": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Terms": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Search": {
      "get": {
        "tags": [
          "Home"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Home/Error": {
      "get": {
        "tags": [
          "Home"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Dashboard": {
      "get": {
        "tags": [
          "Members"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Bookings": {
      "get": {
        "tags": [
          "Members"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Bookings/{id}": {
      "get": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Bookings/{id}/CancelInfo": {
      "get": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Bookings/{id}/Cancel": {
      "post": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Reviews": {
      "get": {
        "tags": [
          "Members"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Members"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Bookings/{id}/AddReview": {
      "get": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Reviews/{id}": {
      "get": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Members"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Members/Pets": {
      "post": {
        "tags": [
          "Members"
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Name",
                  "Type"
                ],
                "type": "object",
                "properties": {
                  "PetID": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Name": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Type": {
                    "maxLength": 30,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Breed": {
                    "maxLength": 50,
                    "minLength": 0,
                    "type": "string"
                  },
                  "Age": {
                    "maximum": 30,
                    "minimum": 0,
                    "type": "integer",
                    "format": "int32"
                  },
                  "Weight": {
                    "maximum": 100,
                    "minimum": 0.1,
                    "type": "number",
                    "format": "double"
                  },
                  "SpecialNeeds": {
                    "maxLength": 500,
                    "minLength": 0,
                    "type": "string"
                  },
                  "AdditionalInfo": {
                    "maxLength": 1000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "PetImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "ImageUrl": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "PetID": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "Type": {
                  "style": "form"
                },
                "Breed": {
                  "style": "form"
                },
                "Age": {
                  "style": "form"
                },
                "Weight": {
                  "style": "form"
                },
                "SpecialNeeds": {
                  "style": "form"
                },
                "AdditionalInfo": {
                  "style": "form"
                },
                "PetImage": {
                  "style": "form"
                },
                "ImageUrl": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Promotions": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromotionDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Promotions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePromotionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/Promotions/{id}": {
      "get": {
        "tags": [
          "Promotions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/SeasonalPricing": {
      "get": {
        "tags": [
          "SeasonalPricing"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeasonalPricingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeasonalPricingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeasonalPricingDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SeasonalPricing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSeasonalPricingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSeasonalPricingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSeasonalPricingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonalPricingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonalPricingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonalPricingDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/SeasonalPricing/{id}": {
      "get": {
        "tags": [
          "SeasonalPricing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonalPricingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonalPricingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeasonalPricingDto"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SeasonalPricing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeasonalPricingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeasonalPricingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSeasonalPricingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "SeasonalPricing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/SeasonalPricing/Apartment/{apartmentId}": {
      "get": {
        "tags": [
          "SeasonalPricing"
        ],
        "parameters": [
          {
            "name": "apartmentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeasonalPricingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeasonalPricingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SeasonalPricingDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Webhooks/Stripe": {
      "post": {
        "tags": [
          "Webhooks"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminMessageDto": {
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Amenity": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "amenityID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "icon": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "iconContentType": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "category": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "apartmentAmenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApartmentAmenity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AmenityDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "amenityID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "iconBase64": {
            "type": "string",
            "nullable": true
          },
          "iconContentType": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "usageCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Apartment": {
        "required": [
          "address",
          "bathrooms",
          "bedrooms",
          "description",
          "maxOccupancy",
          "pricePerNight",
          "title"
        ],
        "type": "object",
        "properties": {
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "neighborhood": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "pricePerNight": {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "bedrooms": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "bathrooms": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "maxOccupancy": {
            "maximum": 30,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "squareMeters": {
            "maximum": 1000,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "petFriendly": {
            "type": "boolean"
          },
          "petFee": {
            "maximum": 1000,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "apartmentAmenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApartmentAmenity"
            },
            "nullable": true
          },
          "apartmentImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApartmentImage"
            },
            "nullable": true
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            },
            "nullable": true
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApartmentAmenity": {
        "type": "object",
        "properties": {
          "apartmentAmenityID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "amenityID": {
            "type": "integer",
            "format": "int32"
          },
          "apartment": {
            "$ref": "#/components/schemas/Apartment"
          },
          "amenity": {
            "$ref": "#/components/schemas/Amenity"
          }
        },
        "additionalProperties": false
      },
      "ApartmentDto": {
        "type": "object",
        "properties": {
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "pricePerNight": {
            "type": "number",
            "format": "double"
          },
          "bedrooms": {
            "type": "integer",
            "format": "int32"
          },
          "bathrooms": {
            "type": "integer",
            "format": "int32"
          },
          "maxOccupancy": {
            "type": "integer",
            "format": "int32"
          },
          "squareMeters": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "petFriendly": {
            "type": "boolean"
          },
          "petFee": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "primaryImageUrl": {
            "type": "string",
            "nullable": true
          },
          "averageRating": {
            "type": "number",
            "format": "double"
          },
          "reviewCount": {
            "type": "integer",
            "format": "int32"
          },
          "images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApartmentImageDto"
            },
            "nullable": true
          },
          "amenities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AmenityDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApartmentImage": {
        "required": [
          "imageUrl"
        ],
        "type": "object",
        "properties": {
          "imageID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "caption": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "apartment": {
            "$ref": "#/components/schemas/Apartment"
          }
        },
        "additionalProperties": false
      },
      "ApartmentImageDto": {
        "type": "object",
        "properties": {
          "imageID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "isPrimary": {
            "type": "boolean"
          },
          "caption": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ApartmentMapDto": {
        "type": "object",
        "properties": {
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "pricePerNight": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "primaryImageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ArchiveConversationDto": {
        "required": [
          "isArchived"
        ],
        "type": "object",
        "properties": {
          "isArchived": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Booking": {
        "required": [
          "bookingStatus",
          "checkInDate",
          "checkOutDate",
          "paymentStatus",
          "reservationNumber"
        ],
        "type": "object",
        "properties": {
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "checkInDate": {
            "type": "string",
            "format": "date"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date"
          },
          "guestCount": {
            "type": "integer",
            "format": "int32"
          },
          "petCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "basePrice": {
            "type": "number",
            "format": "double"
          },
          "promotionID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "discountAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "promotionCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "bookingStatus": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "paymentStatus": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "specialRequests": {
            "type": "string",
            "nullable": true
          },
          "reservationNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "apartment": {
            "$ref": "#/components/schemas/Apartment"
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingCancellationDto": {
        "required": [
          "cancellationReason"
        ],
        "type": "object",
        "properties": {
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "basePrice": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "cancellationPolicy": {
            "type": "string",
            "nullable": true
          },
          "cancellationReason": {
            "minLength": 1,
            "type": "string"
          },
          "fullRefund": {
            "type": "boolean"
          },
          "refundAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingCreateDto": {
        "required": [
          "apartmentID",
          "checkInDate",
          "checkOutDate",
          "guestCount"
        ],
        "type": "object",
        "properties": {
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "checkInDate": {
            "type": "string",
            "format": "date"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date"
          },
          "guestCount": {
            "maximum": 20,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "petCount": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "specialRequests": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "promotionCode": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookingPriceResult": {
        "type": "object",
        "properties": {
          "apartmentId": {
            "type": "integer",
            "format": "int32"
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "guestCount": {
            "type": "integer",
            "format": "int32"
          },
          "petCount": {
            "type": "integer",
            "format": "int32"
          },
          "dailyPrices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyPrice"
            },
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "format": "double"
          },
          "petFee": {
            "type": "number",
            "format": "double"
          },
          "totalBeforeDiscount": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "promotionCode": {
            "type": "string",
            "nullable": true
          },
          "promotionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "promotionMessage": {
            "type": "string",
            "nullable": true
          },
          "nightsCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "BookingResponseDto": {
        "type": "object",
        "properties": {
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentTitle": {
            "type": "string",
            "nullable": true
          },
          "primaryImageUrl": {
            "type": "string",
            "nullable": true
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "guestCount": {
            "type": "integer",
            "format": "int32"
          },
          "petCount": {
            "type": "integer",
            "format": "int32"
          },
          "basePrice": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "type": "number",
            "format": "double"
          },
          "totalPrice": {
            "type": "number",
            "format": "double"
          },
          "promotionCode": {
            "type": "string",
            "nullable": true
          },
          "bookingStatus": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "nullable": true
          },
          "reservationNumber": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "neighborhood": {
            "type": "string",
            "nullable": true
          },
          "pricePerNight": {
            "type": "number",
            "format": "double"
          },
          "nightsCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "hasReview": {
            "type": "boolean"
          },
          "paymentIntentClientSecret": {
            "type": "string",
            "nullable": true
          },
          "paymentIntentId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordDto": {
        "required": [
          "currentPassword",
          "newPassword"
        ],
        "type": "object",
        "properties": {
          "currentPassword": {
            "minLength": 1,
            "type": "string",
            "format": "password"
          },
          "newPassword": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactMessageDto": {
        "type": "object",
        "properties": {
          "contactMessageID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "userID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "isRegisteredUser": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isRead": {
            "type": "boolean"
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "adminNotes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactViewModel": {
        "required": [
          "email",
          "message",
          "name",
          "subject"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "subject": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConversationDto": {
        "type": "object",
        "properties": {
          "conversationID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastMessageDate": {
            "type": "string",
            "format": "date-time"
          },
          "hasUnreadMessages": {
            "type": "boolean"
          },
          "lastMessagePreview": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConversationWithMessagesDto": {
        "type": "object",
        "properties": {
          "conversationID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastMessageDate": {
            "type": "string",
            "format": "date-time"
          },
          "hasUnreadMessages": {
            "type": "boolean"
          },
          "lastMessagePreview": {
            "type": "string",
            "nullable": true
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateConversationDto": {
        "required": [
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "initialMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreatePromotionDto": {
        "required": [
          "code",
          "discountType",
          "discountValue",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "code": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[A-Z0-9]{3,20}$",
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "minLength": 1,
            "pattern": "^(Percentage|FixedAmount)$",
            "type": "string"
          },
          "discountValue": {
            "maximum": 100,
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "minimumStayNights": {
            "maximum": 365,
            "minimum": 1,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minimumBookingAmount": {
            "maximum": 100000,
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maximumDiscountAmount": {
            "maximum": 10000,
            "minimum": 0.01,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "usageLimit": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSeasonalPricingDto": {
        "required": [
          "endDate",
          "name",
          "pricePerNight",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "pricePerNight": {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateTemplateDto": {
        "required": [
          "content",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DailyPrice": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "priceType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateContent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EmailTemplateUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FinancialOverviewDto": {
        "type": "object",
        "properties": {
          "totalRevenue": {
            "type": "number",
            "format": "double"
          },
          "pendingRevenue": {
            "type": "number",
            "format": "double"
          },
          "refundedAmount": {
            "type": "number",
            "format": "double"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "pendingTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "completedTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "failedTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "refundedTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "monthlyRevenue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MonthlyRevenueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ForgotPasswordDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password",
            "nullable": true
          },
          "reservationNumber": {
            "type": "string",
            "nullable": true
          },
          "rememberMe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LoginResultDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "tokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LogoutDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ManualChargeDto": {
        "required": [
          "amount",
          "bookingID",
          "description",
          "paymentMethodID"
        ],
        "type": "object",
        "properties": {
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "description": {
            "minLength": 1,
            "type": "string"
          },
          "paymentMethodID": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MessageDto": {
        "type": "object",
        "properties": {
          "messageID": {
            "type": "integer",
            "format": "int32"
          },
          "conversationID": {
            "type": "integer",
            "format": "int32"
          },
          "senderID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "senderName": {
            "type": "string",
            "nullable": true
          },
          "isFromAdmin": {
            "type": "boolean"
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "mediaUrl": {
            "type": "string",
            "nullable": true
          },
          "isRead": {
            "type": "boolean"
          },
          "sentDate": {
            "type": "string",
            "format": "date-time"
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isFromTemplate": {
            "type": "boolean"
          },
          "templateID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "templateName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageTemplateDto": {
        "type": "object",
        "properties": {
          "templateID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastUsedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "useCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MonthlyRevenueDto": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "nullable": true
          },
          "revenue": {
            "type": "number",
            "format": "double"
          },
          "refundedAmount": {
            "type": "number",
            "format": "double"
          },
          "transactions": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentConfirmationDto": {
        "required": [
          "paymentIntentId",
          "paymentMethodId"
        ],
        "type": "object",
        "properties": {
          "paymentIntentId": {
            "minLength": 1,
            "type": "string"
          },
          "paymentMethodId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PaymentDetailsDto": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "integer",
            "format": "int32"
          },
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "reservationNumber": {
            "type": "string",
            "nullable": true
          },
          "guestName": {
            "type": "string",
            "nullable": true
          },
          "apartmentTitle": {
            "type": "string",
            "nullable": true
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isRefundable": {
            "type": "boolean"
          },
          "paymentIntentID": {
            "type": "string",
            "nullable": true
          },
          "lastFour": {
            "type": "string",
            "nullable": true
          },
          "cardBrand": {
            "type": "string",
            "nullable": true
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "refunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RefundDto"
            },
            "nullable": true
          },
          "refundableAmount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "PaymentListItemDto": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "integer",
            "format": "int32"
          },
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "reservationNumber": {
            "type": "string",
            "nullable": true
          },
          "guestName": {
            "type": "string",
            "nullable": true
          },
          "apartmentTitle": {
            "type": "string",
            "nullable": true
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "paymentMethod": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isRefundable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProcessRefundDto": {
        "required": [
          "amount",
          "reason"
        ],
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "integer",
            "format": "int32"
          },
          "amount": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "reason": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProfileDto": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[0-9\\+\\-\\(\\) ]+$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Promotion": {
        "required": [
          "code",
          "discountType",
          "discountValue",
          "name"
        ],
        "type": "object",
        "properties": {
          "promotionID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "code": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "minLength": 1,
            "type": "string"
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "minimumStayNights": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minimumBookingAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maximumDiscountAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "usageLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usageCount": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apartment": {
            "$ref": "#/components/schemas/Apartment"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PromotionDto": {
        "type": "object",
        "properties": {
          "promotionID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discountType": {
            "type": "string",
            "nullable": true
          },
          "discountValue": {
            "type": "number",
            "format": "double"
          },
          "minimumStayNights": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minimumBookingAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "maximumDiscountAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "usageLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "usageCount": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "apartmentTitle": {
            "type": "string",
            "nullable": true
          },
          "statusDisplay": {
            "type": "string",
            "nullable": true
          },
          "dateRangeDisplay": {
            "type": "string",
            "nullable": true
          },
          "discountDisplay": {
            "type": "string",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean",
            "readOnly": true
          },
          "isUsageLimitReached": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenDto": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "minLength": 1,
            "type": "string"
          },
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RefundDto": {
        "type": "object",
        "properties": {
          "refundID": {
            "type": "integer",
            "format": "int32"
          },
          "refundIntentID": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "adminName": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "completedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterDto": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "pattern": "^[0-9\\+\\-\\(\\) ]+$",
            "type": "string",
            "nullable": true
          },
          "agreeToTerms": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReplyMessageDto": {
        "required": [
          "replyText"
        ],
        "type": "object",
        "properties": {
          "replyText": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "required": [
          "email",
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "maxLength": 100,
            "minLength": 6,
            "type": "string",
            "format": "password"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Review": {
        "type": "object",
        "properties": {
          "reviewID": {
            "type": "integer",
            "format": "int32"
          },
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "apartment": {
            "$ref": "#/components/schemas/Apartment"
          }
        },
        "additionalProperties": false
      },
      "ReviewDto": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "reviewID": {
            "type": "integer",
            "format": "int32"
          },
          "bookingID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentTitle": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "maximum": 5,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "comment": {
            "minLength": 1,
            "type": "string"
          },
          "checkInDate": {
            "type": "string",
            "format": "date-time"
          },
          "checkOutDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SeasonalPricingDto": {
        "required": [
          "endDate",
          "name",
          "pricePerNight",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "seasonalPricingID": {
            "type": "integer",
            "format": "int32"
          },
          "apartmentID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "pricePerNight": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "apartmentTitle": {
            "type": "string",
            "nullable": true
          },
          "basePrice": {
            "type": "number",
            "format": "double"
          },
          "priceDifference": {
            "type": "number",
            "format": "double"
          },
          "priceChangeDisplay": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SetPermissionsDto": {
        "required": [
          "permissions"
        ],
        "type": "object",
        "properties": {
          "permissions": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UnreadCountDto": {
        "type": "object",
        "properties": {
          "unreadCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateApartmentStatusDto": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateMessageNotesDto": {
        "type": "object",
        "properties": {
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateMessageStatusDto": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "minLength": 1,
            "pattern": "^(New|Read|Responded|Archived)$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateSeasonalPricingDto": {
        "required": [
          "endDate",
          "name",
          "pricePerNight",
          "startDate"
        ],
        "type": "object",
        "properties": {
          "seasonalPricingID": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "pricePerNight": {
            "maximum": 10000,
            "minimum": 1,
            "type": "number",
            "format": "double"
          },
          "description": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateTemplateDto": {
        "required": [
          "content",
          "title"
        ],
        "type": "object",
        "properties": {
          "templateID": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "content": {
            "minLength": 1,
            "type": "string"
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "email",
          "passwordHash",
          "username"
        ],
        "type": "object",
        "properties": {
          "userID": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "email": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "email"
          },
          "passwordHash": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "isAdmin": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "isEmailVerified": {
            "type": "boolean"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            },
            "nullable": true
          },
          "reviews": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Review"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}